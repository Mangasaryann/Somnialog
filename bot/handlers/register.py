from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message
from bot.database.queries import set_user, get_user

class Register(StatesGroup):
    nickname = State()

register_router = Router()

@register_router.message(CommandStart())
async def start(message: Message, state: FSMContext):
    user = await get_user(message.from_user.id)
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê—Ä—Ö–∏–≤ –°–Ω–æ–≤–∏–¥–µ–Ω–∏–π!\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –∏–∑—É—á–∏—Ç—å —Ç–≤–æ–∏ —Å–Ω—ã."
    )

    if user is None:
        await message.answer("–î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º ‚Äî –≤—ã–±–µ—Ä–∏ –Ω–∏–∫, –ø–æ–¥ –∫–æ—Ç–æ—Ä—ã–º —Ç—ã –±—É–¥–µ—à—å –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å–Ω—ã:")
        await state.set_state(Register.nickname)
    else:
        await message.answer(
            "–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –ê—Ä—Ö–∏–≤–µ –°–Ω–æ–≤–∏–¥–µ–Ω–∏–π.\n\n"
            " üìñ –¢—ã –º–æ–∂–µ—à—å:\n\n"
            " üìù –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–æ–Ω ‚Äî /add_dream\n"
            " üåå –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ —Å–Ω—ã ‚Äî /my_dreams\n"
            " üìä –£–∑–Ω–∞—Ç—å –∫–∞—Ä—Ç—É —ç–º–æ—Ü–∏–π ‚Äî /emotion_map"
        )


@register_router.message(Register.nickname)
async def register(message: Message, state: FSMContext):
    nickname = message.text.strip()

    if not nickname:
        await message.answer("‚ùó –ù–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
        return

    tg_id = message.from_user.id
    await set_user(tg_id,nickname)

    await message.answer(
        f"‚ú® –û—Ç–ª–∏—á–Ω–æ, {nickname}! –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –ê—Ä—Ö–∏–≤–µ –°–Ω–æ–≤–∏–¥–µ–Ω–∏–π.\n\n"
        " üìñ –¢—ã –º–æ–∂–µ—à—å:\n\n"
        " üìù –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–æ–Ω ‚Äî /add_dream\n"
        " üåå –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ —Å–Ω—ã ‚Äî /my_dreams\n"
        " üìä –£–∑–Ω–∞—Ç—å –∫–∞—Ä—Ç—É —ç–º–æ—Ü–∏–π ‚Äî /emotion_map"
    )

    await state.clear()





